// <auto-generated />
using System;
using FileMove;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace filemove.Migrations
{
    [DbContext(typeof(FileArchiveContext))]
    [Migration("20200330180949_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FileMove.ArchiveLog", b =>
                {
                    b.Property<int>("ArchiveLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArchiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileArchiveId")
                        .HasColumnType("int");

                    b.Property<string>("OriginalPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArchiveLogId");

                    b.HasIndex("FileArchiveId");

                    b.ToTable("ArchiveLog");
                });

            modelBuilder.Entity("FileMove.FileArchive", b =>
                {
                    b.Property<int>("FileArchiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArchiveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolderPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.HasKey("FileArchiveId");

                    b.ToTable("FileArchives");
                });

            modelBuilder.Entity("FileMove.ArchiveLog", b =>
                {
                    b.HasOne("FileMove.FileArchive", null)
                        .WithMany("archiveLogs")
                        .HasForeignKey("FileArchiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
